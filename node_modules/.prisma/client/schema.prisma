generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Company {
  id                  String            @id @default(uuid())
  name                String
  registration_number String            @unique
  email               String            @unique
  phone               String?
  website             String?
  industry            String?
  address             Json?
  logo_url            String?
  status              String
  subscription_tier   String
  billing_info        Json?
  settings            Json?
  created_at          DateTime          @default(now())
  updated_at          DateTime          @updatedAt
  created_by          String?
  updated_by          String?
  version             Int               @default(1)
  employees           CompanyEmployee[]
  departments         Department[]
  policies            CompanyPolicy[]
  CompanySetting      CompanySetting[]
}

model CompanyEmployee {
  id                   String      @id @default(uuid())
  company              Company     @relation(fields: [company_id], references: [id])
  company_id           String
  user_id              String
  employee_id          String
  department           Department? @relation(fields: [department_id], references: [id])
  department_id        String?
  designation          String?
  role                 String
  budget_limit         Float?
  start_date           DateTime?
  end_date             DateTime?
  salary_band          String?
  reporting_manager_id String?
  employment_type      String?
  status               String
  created_at           DateTime    @default(now())
  updated_at           DateTime    @updatedAt

  @@unique([company_id, employee_id])
}

model CompanyPolicy {
  id             String    @id @default(uuid())
  company        Company   @relation(fields: [company_id], references: [id])
  company_id     String
  policy_type    String
  name           String
  description    String?
  rules          Json?
  is_active      Boolean   @default(true)
  priority       Int?
  effective_from DateTime?
  effective_to   DateTime?
  created_by     String?
  approved_by    String?
  approval_date  DateTime?
  version        Int       @default(1)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
}

model Department {
  id               String   @id @default(uuid())
  company          Company  @relation(fields: [company_id], references: [id])
  company_id       String
  name             String
  description      String?
  code             String
  cost_center      String?
  budget_allocated Float?
  budget_used      Float?
  manager_id       String?
  parent_id        String?
  level            Int?
  path             String?
  is_active        Boolean  @default(true)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  employees CompanyEmployee[]
}

model CompanySetting {
  id           String   @id @default(uuid())
  company      Company  @relation(fields: [company_id], references: [id])
  company_id   String
  category     String
  key          String
  value        Json?
  data_type    String
  is_encrypted Boolean  @default(false)
  description  String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@unique([company_id, category, key])
}
